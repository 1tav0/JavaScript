/***Main Idea of Javascript***/
1. save the data 
2. generate the html 
3. make it interactive
  -   HOW DO WE KNOW WHICH PRODUCT TO ADD TO CART ?
    - DATA ATTRIBUTE: 
     - is just another HTML attribute 
     - allows us to attach any information to an element 
    - SYNTAX FOR A DATA ATTRIBUTE 
     - is just an HTML attribute 
     - have to start with "data-"
     - then give it any name 
          name                      value 
      ...data-procduct-name = "${product.name}">
    -WHAT IS THE PURPOSE FOR A DATA ATTRIBUTE?
      - can attach the data image, price, etc.
      - note: if we console.log(button.dataset) in the console we will go from data-product-name KEBAB-CASE to PRODUCTNAME 
  - NOW THAT WE ADDED SUCCESFULLY TO THE CART HOW CAN WE INCREASE THE QUANTITY INSTEAD OF REPEATING DATA IN THE ARRAY ?
    - STEPS: 
     - Check if the product is already in the cart, if so increase the quanity 
     - if not then add it to the cart
  - INSTEAD OF USING THE PRODUCT NAME TO IDENTIFY EACH ITEM WE MUST USE AN ID THIS WAY IF TWO ITEMS HAVE THE SAME NAME BUT DIFFERENT BRANDS IT WILL STILL WORK 
  -WE MUST UPDATE THE DOM QUANTITY ELEMENT  
    - Calculate the quantity.
    - Put the quantity on the page.
/***MODULES***/
  - A MODULE HELPS US MAKE USE OF THE SCRIPTS NAMES SO WHEN WE RENAME SOMETHING THE SAME NAME AS OUR SCRIPT FILES IT WE CAN STILL REUSE THE NAME SINCE THE FILE IS NOW 'WRAPPED' IN A MODULE SO IT WONT CAUSE NAMING CONFLICTS.
    <script src="data/cart.js"></script>
    1. Run all the code code inside the cart.js 
      const cart = [];
    2. create a cart variable 
    3. we name anther variable cart now this CAUSES NAMING CONFLICT 
    ---WITH MODULES: 
    1. no longer running the code inside cart.js 
    2. Therefore no more cart varible is created 
    3. Therefore no more naming conflict
  -HOW TO MAKE A MODULE?
    -   1. Create a file 
    -   2. Dont load the file with <script>
    - Any variables we create inside the file, will be contained inside the file
  -GET A VARIABLE OUT OF A FILE 
    - Add type="module" attribute 
    - Export what we want to access in other file here it is  cart 
    - import {cart as myCart} from '../data/cart.js'
  -PROS: WITH SCRIPTS THE ORTHER MATTERS
  1.  <script src="data/cart.js"></script>
  2.  <script src="data/products.js"></script>
  3.  <script type="module" src="scripts/amazon.js"></script>
  -WITH MODULES WE GET RID OF THIS ORDER 
  -SCRIPT THAT MAKES USE OF THE MODULE IS AKA **ENTRY POINT**
/***WORKING ON THE CHECKOUT PAGE***/
  - WE MAKE USE OF THE MAIN IDEA OF JS 
  - In our Cart.js file we make use of just the id and quatity and use something called NORMALIZING THE DATA to not resave the products name, quantity, price etc. twice but isntead make use of the already in the products folder with some tricks.
/***RADIO SELECTOR***/
  - THE BULLET POINT WE SEE IN THE DELIVERY OPTION FOR CHECKOUT PAGE
    i.e. <input type="radio" name="name1">
